version: '3.9'
services:
    customer_svc:
        image: customer_svc:0.1
        ports:
            - 8080:8080
        environment:
            'PORT': ':8080'
            'DB_URL': 'postgres://moab:supersecure@db/paymentsdb'
            'OTLP_ENDPOINT': tempo:4318
        networks:
            - app
            - monitoring
        depends_on:
            - db
        restart: always
        labels:
            co.elastic.logs/enabled: true
            co.elastic.logs/json.keys_under_root: true
            co.elastic.logs/json.overwrite_keys: true
            co.elastic.logs/json.add_error_key: true
            co.elastic.logs/json.expand_keys: true

    db:
        networks:
            - app
        image: 'postgres:16.0'
        ports:
            - 5432:5432
        environment:
            POSTGRES_PASSWORD: supersecure
            POSTGRES_USER: moab
            POSTGRES_DB: paymentsdb
        volumes:
            - './init.sql:/docker-entrypoint-initdb.d/init.sql'
            - pgdata:/var/lib/postgresql/data
        command: postgres -c checkpoint_timeout=600 -c max_wal_size=4096
        healthcheck:
            test: pg_isready -U "$$POSTGRES_USER" -d "$$POSTGRES_DB"
            interval: 10s
            timeout: 2s
            retries: 10
        deploy:
            resources:
                limits:
                    cpus: '0.6'
                    memory: '700MB'
        labels:
            co.elastic.logs/enabled: true
            co.elastic.logs/json.keys_under_root: true
            co.elastic.logs/json.overwrite_keys: true
            co.elastic.logs/json.add_error_key: true
            co.elastic.logs/json.expand_keys: true

    init:
        image: &tempoImage grafana/tempo:latest
        user: root
        entrypoint:
            - 'chown'
            - '10001:10001'
            - '/var/tempo'
        volumes:
            - tempodata:/var/tempo

    grafana:
        image: grafana/grafana:10.4.2
        labels:
            co.elastic.logs/enabled: false
        volumes:
            - ../shared/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
        environment:
            - GF_AUTH_ANONYMOUS_ENABLED=true
            - GF_SECURITY_ADMIN_PASSWORD=example
            - GF_SECURITY_ADMIN_USER=admin
            - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
            - GF_AUTH_DISABLE_LOGIN_FORM=true
            - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor traceQLStreaming metricsSummary
        ports:
            - '3000:3000'
        networks:
            - monitoring

    tempo:
        image: *tempoImage
        command: ['-config.file=/etc/tempo.yaml']
        labels:
            co.elastic.logs/enabled: false
        volumes:
            - ../shared/tempo-config.yaml:/etc/tempo.yaml
            - tempodata:/var/tempo
        ports:
            - '14268:14268' # jaeger ingest
            - '3200:3200' # tempo
            - '9095:9095' # tempo grpc
            - '4317:4317' # otlp grpc
            - '4318:4318' # otlp http
            - '9411:9411' # zipkin
        depends_on:
            - init
        networks:
            - monitoring

    prometheus:
        image: prom/prometheus:latest
        labels:
            co.elastic.logs/enabled: false
        command:
            - --config.file=/etc/prometheus.yaml
            - --web.enable-remote-write-receiver
            - --enable-feature=exemplar-storage
        volumes:
            - ../shared/prometheus.yaml:/etc/prometheus.yaml
        ports:
            - '9090:9090'
        networks:
            - monitoring

    filebeat:
        labels:
            co.elastic.logs/enabled: false
        user: root
        image: elastic/filebeat:7.17.21
        command: filebeat -e -strict.perms=false
        volumes:
            - ../shared/filebeat.docker.yml:/usr/share/filebeat/filebeat.yml
            - /var/lib/docker/containers:/var/lib/docker/containers:ro
            - /var/run/docker.sock:/var/run/docker.sock:ro
        networks:
            - app
            - monitoring

    elasticsearch:
        labels:
            co.elastic.logs/enabled: false
        environment:
            - discovery.type=single-node
            - xpack.security.enabled=false
        image: elasticsearch:8.13.0
        ports:
            - 9200:9200
        networks:
            - app
            - monitoring

networks:
    app:
    monitoring:

volumes:
    pgdata:
    tempodata:
